{
	"name": "Final_austin_v2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Austin_source_to_parquet",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          Crash_ID as string,",
				"          crash_fatal_fl as string,",
				"          case_id as string,",
				"          Primary_address as string,",
				"          Secondary_address as string,",
				"          rpt_block_num as string,",
				"          rpt_street_name as string,",
				"          rpt_street_sfx as string,",
				"          crash_speed_limit as string,",
				"          road_constr_zone_fl as string,",
				"          latitude as string,",
				"          longitude as string,",
				"          crash_sev_id as string,",
				"          sus_serious_injry_cnt as string,",
				"          nonincap_injry_cnt as string,",
				"          poss_injry_cnt as string,",
				"          non_injry_cnt as string,",
				"          unkn_injry_cnt as string,",
				"          tot_injry_cnt as string,",
				"          death_cnt as string,",
				"          units_involved as string,",
				"          point as string,",
				"          motor_vehicle_death_count as string,",
				"          motor_vehicle_serious_injury_count as string,",
				"          bicycle_death_count as string,",
				"          bicycle_serious_injury_count as string,",
				"          pedestrian_death_count as string,",
				"          pedestrian_serious_injury_count as string,",
				"          motorcycle_death_count as string,",
				"          motorcycle_serious_injury_count as string,",
				"          other_death_count as string,",
				"          other_serious_injury_count as string,",
				"          onsys_fl as string,",
				"          private_dr_fl as string,",
				"          micromobility_serious_injury_count as string,",
				"          micromobility_death_count as string,",
				"          Crash_timestamp_US_Central as string,",
				"          Crash_timestamp as string,",
				"          Is_deleted as string,",
				"          Is_temporary_record as string,",
				"          Law_enforcement_fatality_count as string,",
				"          Reported_street_prefix as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: true,",
				"     format: 'parquet') ~> source1",
				"source1 derive(Crash_timestamp_US_Central = toDate(Crash_timestamp_US_Central, 'MM/dd/yyyy', 'en-US'),",
				"          Crash_timestamp = toTimestamp(Crash_timestamp_US_Central, 'MM/dd/yyyy HH:mm', 'EST', 'en-US'),",
				"          created_dt = toString(currentTimestamp()),",
				"          pid = \"cdferff123djfDJRG32kf\",",
				"          sus_serious_injry_cnt = toInteger(sus_serious_injry_cnt),",
				"          nonincap_injry_cnt = toInteger(sus_serious_injry_cnt),",
				"          poss_injry_cnt = toInteger(poss_injry_cnt),",
				"          non_injry_cnt = toInteger(non_injry_cnt),",
				"          unkn_injry_cnt = toInteger(unkn_injry_cnt),",
				"          tot_injry_cnt = toInteger(tot_injry_cnt),",
				"          death_cnt = toInteger(death_cnt),",
				"          motor_vehicle_death_count = toInteger(motor_vehicle_death_count),",
				"          motor_vehicle_serious_injury_count = toInteger(motor_vehicle_serious_injury_count),",
				"          bicycle_death_count = toInteger(bicycle_death_count),",
				"          bicycle_serious_injury_count = toInteger(bicycle_serious_injury_count),",
				"          pedestrian_death_count = toInteger(pedestrian_death_count),",
				"          pedestrian_serious_injury_count = toInteger(pedestrian_serious_injury_count),",
				"          motorcycle_death_count = toInteger(motorcycle_death_count),",
				"          motorcycle_serious_injury_count = toInteger(motor_vehicle_serious_injury_count),",
				"          other_death_count = toInteger(other_death_count),",
				"          other_serious_injury_count = toInteger(other_serious_injury_count),",
				"          Law_enforcement_fatality_count = toInteger(Law_enforcement_fatality_count),",
				"          latitude = iif(isNull(latitude) || latitude == '', '-1', trim(latitude)),",
				"          longitude = iif(isNull(longitude) || longitude == '', '-1', trim(longitude)),",
				"          street_name = Primary_address + Secondary_address,",
				"          Di_workflow_name = \"Austin_Crash_Report_Data_-_Crash_Level_Records_20241129.tsv\",",
				"          ID = 'Austin_'+ID) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          CRASH_ID = ID,",
				"          crash_fatal_fl,",
				"          case_id,",
				"          street_address = street_name,",
				"          rpt_block_num,",
				"          rpt_street_name,",
				"          rpt_street_sfx,",
				"          crash_speed_limit,",
				"          road_constr_zone_fl,",
				"          latitude,",
				"          longitude,",
				"          crash_sev_id,",
				"          sus_serious_injry_cnt,",
				"          nonincap_injry_cnt,",
				"          poss_injry_cnt,",
				"          non_injry_cnt,",
				"          unkn_injry_cnt,",
				"          tot_injry_cnt,",
				"          death_cnt,",
				"          units_involved,",
				"          point,",
				"          motor_vehicle_death_count,",
				"          motor_vehicle_serious_injury_count,",
				"          bicycle_death_count,",
				"          bicycle_serious_injury_count,",
				"          pedestrian_death_count,",
				"          pedestrian_serious_injury_count,",
				"          motorcycle_death_count,",
				"          motorcycle_serious_injury_count,",
				"          other_death_count,",
				"          other_serious_injury_count,",
				"          onsys_fl,",
				"          private_dr_fl,",
				"          micromobility_serious_injury_count,",
				"          micromobility_death_count,",
				"          Crash_timestamp_US_Central,",
				"          Crash_timestamp,",
				"          Is_deleted,",
				"          Is_temporary_record,",
				"          Law_enforcement_fatality_count,",
				"          Reported_street_prefix,",
				"          Di_workflow_name,",
				"          created_dt,",
				"          pid",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CRASH_ID,",
				"          crash_fatal_fl,",
				"          case_id,",
				"          street_address,",
				"          rpt_block_num,",
				"          rpt_street_name,",
				"          rpt_street_sfx,",
				"          crash_speed_limit,",
				"          road_constr_zone_fl,",
				"          latitude,",
				"          longitude,",
				"          crash_sev_id,",
				"          sus_serious_injry_cnt,",
				"          nonincap_injry_cnt,",
				"          poss_injry_cnt,",
				"          non_injry_cnt,",
				"          unkn_injry_cnt,",
				"          tot_injry_cnt,",
				"          death_cnt,",
				"          units_involved,",
				"          point,",
				"          motor_vehicle_death_count,",
				"          motor_vehicle_serious_injury_count,",
				"          bicycle_death_count,",
				"          bicycle_serious_injury_count,",
				"          pedestrian_death_count,",
				"          pedestrian_serious_injury_count,",
				"          motorcycle_death_count,",
				"          motorcycle_serious_injury_count,",
				"          other_death_count,",
				"          other_serious_injury_count,",
				"          onsys_fl,",
				"          private_dr_fl,",
				"          micromobility_serious_injury_count,",
				"          micromobility_death_count,",
				"          Crash_timestamp_US_Central,",
				"          Crash_timestamp,",
				"          Is_deleted,",
				"          Is_temporary_record,",
				"          Law_enforcement_fatality_count,",
				"          Reported_street_prefix,",
				"          Di_workflow_name,",
				"          created_dt,",
				"          pid",
				"     )) ~> sink1"
			]
		}
	}
}